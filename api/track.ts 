// api/track.ts (Create this file in root/api/ folder)
import type { VercelRequest, VercelResponse } from '@vercel/node';

// Simple in-memory tracking (no Kafka for now)
export default async function handler(req: VercelRequest, res: VercelResponse) {
  // Enable CORS
  res.setHeader('Access-Control-Allow-Origin', 'https://www.sibichandrasekar.com');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // Handle preflight OPTIONS request
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  // Only allow POST requests
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    // Get client IP
    const clientIP = 
      req.headers['x-forwarded-for'] as string ||
      req.headers['x-real-ip'] as string ||
      'unknown';

    // Create tracking event
    const trackingEvent = {
      id: Math.random().toString(36).substring(7), // Simple ID
      timestamp: new Date().toISOString(),
      ip: clientIP,
      url: req.body.url,
      referrer: req.body.referrer,
      user_agent: req.body.user_agent,
      host: req.body.host,
      event_type: req.body.event_type,
    };

    // For now, just log it (you can add Kafka later)
    console.log("üì© Tracking Event:", trackingEvent);

    // Return success
    res.status(200).json({
      success: true,
      eventId: trackingEvent.id,
      message: "Event tracked successfully"
    });

  } catch (error) {
    console.error("‚ùå Tracking error:", error);
    res.status(400).json({
      success: false,
      error: "Failed to process tracking event",
    });
  }
}